- name: Check if zsh is present
  command: /bin/sh -c "command -v zsh >/dev/null 2>&1"
  register: zsh_installed
  ignore_errors: yes

- name: Install zsh on debian-like
  ansible.builtin.apt:
    name: zsh
    state: present
    update_cache: yes
  when: zsh_installed.rc != 0 and (ansible_os_family == "Debian" or force_ubuntu)

- name: Install zsh on redhat-like
  ansible.builtin.yum:
    name: zsh
    state: present
    update_cache: yes
  when: zsh_installed.rc != 0 and ansible_os_family == "RedHat"

- name: Install httpie on debian-like
  ansible.builtin.apt:
    name: httpie
    state: present
    update_cache: no
  when:  ansible_os_family == "Debian" or force_ubuntu

- name: Install httpie on redhat-like
  ansible.builtin.yum:
    name: httpie
    state: present
    update_cache: no
  when:  ansible_os_family == "RedHat"

- name: Install ripgrep on debian-like
  ansible.builtin.apt:
    name: ripgrep
    state: present
    update_cache: no
  when:  ansible_os_family == "Debian" or force_ubuntu

- name: Install ripgrep on redhat-like
  ansible.builtin.yum:
    name: ripgrep
    state: present
    update_cache: no
  when:  ansible_os_family == "RedHat"

- name: Change user' settings
  ansible.builtin.user:
    name: "{{ username }}"
    append: yes
    groups: "{%- if docker -%}docker{%- endif -%}"
    shell: /bin/zsh

- name: Check if oh-my-zsh is already installed for the user
  stat:
    path: "~/.oh-my-zsh"
  register: oh_my_zsh_dir
  become_user: "{{ username }}"
  
- name: Download oh-my-zsh installer
  get_url:
    url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: /tmp/zsh-installer.sh
    mode: "0755"
  when: not oh_my_zsh_dir.stat.exists
  register: download

- name: Run the oh-my-zsh installer
  shell: /tmp/zsh-installer.sh --unattended
  when: not oh_my_zsh_dir.stat.exists and download.changed
  become_user: "{{ username }}"

- name: Remove the oh-my-zsh installer
  file:
    path: /tmp/zsh-installer.sh
    state: absent

- name: Check if starship is already installed
  stat:
    path: "/usr/local/bin/starship"
  register: starship_bin
  become_user: "{{ username }}"

- name: Download starship installer
  get_url:
    url: https://starship.rs/install.sh
    dest: /tmp/starship-installer.sh
    mode: "0755"
  when: not starship_bin.stat.exists
  register: download

- name: Run the starship installer
  shell: /tmp/starship-installer.sh -y
  when: not starship_bin.stat.exists and download.changed
  become: true

- name: Remove the starship installer
  file:
    path: /tmp/starship-installer.sh
    state: absent

- name: Install zsh-autosuggestions plugin
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions.git
    dest: "~/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
  become_user: "{{ username }}"

- name: Install zsh-syntax-highlighting plugin
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: "~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
  become_user: "{{ username }}"

- name: Install zsh-you-should-use plugin
  ansible.builtin.git:
    repo: https://github.com/MichaelAquilina/zsh-you-should-use.git
    dest: "~/.oh-my-zsh/custom/plugins/you-should-use"
  become_user: "{{ username }}"

- name: Install zsh-bat plugin
  ansible.builtin.git:
    repo: https://github.com/fdellwing/zsh-bat.git
    dest: "~/.oh-my-zsh/custom/plugins/zsh-bat"
  become_user: "{{ username }}"

- name: Setup zsh configuration
  ansible.builtin.template:
    src: .zshrc
    dest: "~/.zshrc"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: '0640'
  become_user: "{{ username }}"

# TODO : installer font Hack